{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAYANK\\\\Desktop\\\\AppleVerse2.0\\\\frontend\\\\src\\\\pages\\\\CreateApple.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './createApple.css';\nimport axios from 'axios';\nimport Papa from 'papaparse'; // CSV parser\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateApple() {\n  _s();\n  const [step, setStep] = useState(0);\n  const [uploadMethod, setUploadMethod] = useState(null);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [uploadComplete, setUploadComplete] = useState(false);\n  const [error, setError] = useState('');\n\n  // Handle file selection with CSV validation\n  const handleFileChange = e => {\n    const files = Array.from(e.target.files);\n    const invalidFiles = files.filter(file => !file.name.toLowerCase().endsWith('.csv'));\n    if (invalidFiles.length > 0) {\n      setError(`❌ Invalid file type: ${invalidFiles.map(f => f.name).join(', ')}. Only CSV files are allowed.`);\n      setSelectedFiles([]);\n    } else {\n      setError('');\n      setSelectedFiles(files);\n    }\n  };\n  const handleUpload = () => {\n    if (selectedFiles.length === 0) {\n      setError('⚠️ Please select at least one CSV file to upload.');\n      return;\n    }\n    setUploadedFiles(prev => [...prev, ...selectedFiles]);\n    setUploadComplete(true);\n    setSelectedFiles([]);\n    setError('');\n  };\n  const handleRestart = () => {\n    setStep(0);\n    setUploadMethod(null);\n    setSelectedFiles([]);\n    setUploadedFiles([]);\n    setUploadComplete(false);\n    setError('');\n  };\n\n  // Function to read CSV contents and send to backend\n  const submitToBackend = async () => {\n    try {\n      let apples = [];\n\n      // Read each uploaded CSV file\n      for (const file of uploadedFiles) {\n        const text = await file.text();\n        const parsed = Papa.parse(text, {\n          header: true\n        });\n\n        // ✅ Validation: Only include rows with both name and color\n        parsed.data.forEach(row => {\n          if (row.name && row.color) {\n            apples.push({\n              name: row.name,\n              color: row.color\n            });\n          }\n        });\n      }\n      if (apples.length === 0) {\n        alert(\"❌ No valid apple data found in CSV files.\");\n        return;\n      }\n\n      // Send valid apples to backend\n      const response = await axios.post(\"http://localhost:5000/add-apple\", {\n        apples\n      });\n      console.log(response.data);\n      alert(\"🎉 Resources submitted successfully to backend!\");\n      handleRestart(); // Reset after successful submit\n    } catch (err) {\n      console.error(err);\n      alert(\"❌ Error submitting to backend\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-apple-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"Create New Apple Resource \\uD83C\\uDF4E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline\",\n      children: ['Start', 'Upload', 'Confirmation', 'Review'].map((label, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `timeline-step ${step === idx ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle\",\n          children: idx + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-content-card\",\n      children: [step === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Step 0: Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"How to Use:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Choose \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Single Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 28\n              }, this), \" for one CSV file.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Choose \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Multiple Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 28\n              }, this), \" for batch uploading CSV files.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Use \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Download Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 25\n              }, this), \" to get the sample CSV structure.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-btn single\",\n            onClick: () => {\n              setUploadMethod('single');\n              setStep(1);\n            },\n            children: \"Single Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-btn multiple\",\n            onClick: () => {\n              setUploadMethod('multiple');\n              setStep(1);\n            },\n            children: \"Multiple Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-btn template\",\n            onClick: () => alert('📄 Template downloaded successfully!'),\n            children: \"Download Template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Step 1: Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Instructions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Only \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \".csv\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 26\n              }, this), \" files are accepted.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Make sure each row follows the correct format: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"name,color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 68\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          multiple: uploadMethod === 'multiple',\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red',\n            fontWeight: '500',\n            marginTop: '10px'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 23\n        }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: selectedFiles.map((file, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: file.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-secondary\",\n            onClick: () => setStep(0),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary\",\n            onClick: handleUpload,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), uploadComplete && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary\",\n            onClick: () => setStep(2),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Step 2: Confirmation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2705 Your file(s) have been uploaded successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: uploadedFiles.map((file, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: file.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-secondary\",\n            onClick: () => setStep(1),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary\",\n            onClick: () => setStep(3),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Step 3: Review & Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDCE6 Uploaded files:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: uploadedFiles.map((file, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: file.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-secondary\",\n            onClick: handleRestart,\n            children: \"Restart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary\",\n            onClick: submitToBackend // ✅ Sends only valid rows to backend\n            ,\n            children: \"Final Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateApple, \"xdlkdwAoGGLPg162gessz076udY=\");\n_c = CreateApple;\nvar _c;\n$RefreshReg$(_c, \"CreateApple\");","map":{"version":3,"names":["React","useState","axios","Papa","jsxDEV","_jsxDEV","CreateApple","_s","step","setStep","uploadMethod","setUploadMethod","selectedFiles","setSelectedFiles","uploadedFiles","setUploadedFiles","uploadComplete","setUploadComplete","error","setError","handleFileChange","e","files","Array","from","target","invalidFiles","filter","file","name","toLowerCase","endsWith","length","map","f","join","handleUpload","prev","handleRestart","submitToBackend","apples","text","parsed","parse","header","data","forEach","row","color","push","alert","response","post","console","log","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","idx","onClick","type","accept","multiple","onChange","style","fontWeight","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/MAYANK/Desktop/AppleVerse2.0/frontend/src/pages/CreateApple.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './createApple.css';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse'; // CSV parser\r\n\r\nexport default function CreateApple() {\r\n  const [step, setStep] = useState(0);\r\n  const [uploadMethod, setUploadMethod] = useState(null);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [uploadComplete, setUploadComplete] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // Handle file selection with CSV validation\r\n  const handleFileChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    const invalidFiles = files.filter(file => !file.name.toLowerCase().endsWith('.csv'));\r\n\r\n    if (invalidFiles.length > 0) {\r\n      setError(`❌ Invalid file type: ${invalidFiles.map(f => f.name).join(', ')}. Only CSV files are allowed.`);\r\n      setSelectedFiles([]);\r\n    } else {\r\n      setError('');\r\n      setSelectedFiles(files);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (selectedFiles.length === 0) {\r\n      setError('⚠️ Please select at least one CSV file to upload.');\r\n      return;\r\n    }\r\n\r\n    setUploadedFiles((prev) => [...prev, ...selectedFiles]);\r\n    setUploadComplete(true);\r\n    setSelectedFiles([]);\r\n    setError('');\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setStep(0);\r\n    setUploadMethod(null);\r\n    setSelectedFiles([]);\r\n    setUploadedFiles([]);\r\n    setUploadComplete(false);\r\n    setError('');\r\n  };\r\n\r\n  // Function to read CSV contents and send to backend\r\n  const submitToBackend = async () => {\r\n    try {\r\n      let apples = [];\r\n\r\n      // Read each uploaded CSV file\r\n      for (const file of uploadedFiles) {\r\n        const text = await file.text();\r\n        const parsed = Papa.parse(text, { header: true });\r\n\r\n        // ✅ Validation: Only include rows with both name and color\r\n        parsed.data.forEach(row => {\r\n          if (row.name && row.color) {\r\n            apples.push({ name: row.name, color: row.color });\r\n          }\r\n        });\r\n      }\r\n\r\n      if (apples.length === 0) {\r\n        alert(\"❌ No valid apple data found in CSV files.\");\r\n        return;\r\n      }\r\n\r\n      // Send valid apples to backend\r\n      const response = await axios.post(\"http://localhost:5000/add-apple\", { apples });\r\n      console.log(response.data);\r\n      alert(\"🎉 Resources submitted successfully to backend!\");\r\n      handleRestart(); // Reset after successful submit\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"❌ Error submitting to backend\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-apple-container\">\r\n      <h1 className=\"page-title\">Create New Apple Resource 🍎</h1>\r\n\r\n      {/* Timeline */}\r\n      <div className=\"timeline\">\r\n        {['Start', 'Upload', 'Confirmation', 'Review'].map((label, idx) => (\r\n          <div key={idx} className={`timeline-step ${step === idx ? 'active' : ''}`}>\r\n            <div className=\"circle\">{idx + 1}</div>\r\n            <span>{label}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Step Content */}\r\n      <div className=\"step-content-card\">\r\n        {step === 0 && (\r\n          <div className=\"step\">\r\n            <h2>Step 0: Start</h2>\r\n            <div className=\"instructions-card\">\r\n              <h3>How to Use:</h3>\r\n              <ul>\r\n                <li>Choose <b>Single Upload</b> for one CSV file.</li>\r\n                <li>Choose <b>Multiple Upload</b> for batch uploading CSV files.</li>\r\n                <li>Use <b>Download Template</b> to get the sample CSV structure.</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"upload-options\">\r\n              <button\r\n                className=\"upload-btn single\"\r\n                onClick={() => {\r\n                  setUploadMethod('single');\r\n                  setStep(1);\r\n                }}\r\n              >\r\n                Single Upload\r\n              </button>\r\n\r\n              <button\r\n                className=\"upload-btn multiple\"\r\n                onClick={() => {\r\n                  setUploadMethod('multiple');\r\n                  setStep(1);\r\n                }}\r\n              >\r\n                Multiple Upload\r\n              </button>\r\n\r\n              <button\r\n                className=\"upload-btn template\"\r\n                onClick={() => alert('📄 Template downloaded successfully!')}\r\n              >\r\n                Download Template\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {step === 1 && (\r\n          <div className=\"step\">\r\n            <h2>Step 1: Upload</h2>\r\n            <div className=\"instructions-card\">\r\n              <h3>Instructions:</h3>\r\n              <ul>\r\n                <li>Only <b>.csv</b> files are accepted.</li>\r\n                <li>Make sure each row follows the correct format: <b>name,color</b>.</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <input\r\n              type=\"file\"\r\n              accept=\".csv\"\r\n              multiple={uploadMethod === 'multiple'}\r\n              onChange={handleFileChange}\r\n            />\r\n\r\n            {error && <p style={{ color: 'red', fontWeight: '500', marginTop: '10px' }}>{error}</p>}\r\n\r\n            {selectedFiles.length > 0 && (\r\n              <ul>\r\n                {selectedFiles.map((file, idx) => (\r\n                  <li key={idx}>{file.name}</li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n\r\n            <div className=\"navigation-buttons\">\r\n              <button className=\"btn-secondary\" onClick={() => setStep(0)}>\r\n                Back\r\n              </button>\r\n              <button className=\"btn-primary\" onClick={handleUpload}>\r\n                Upload\r\n              </button>\r\n              {uploadComplete && (\r\n                <button className=\"btn-primary\" onClick={() => setStep(2)}>\r\n                  Next\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {step === 2 && (\r\n          <div className=\"step\">\r\n            <h2>Step 2: Confirmation</h2>\r\n            <p>✅ Your file(s) have been uploaded successfully!</p>\r\n            <ul>\r\n              {uploadedFiles.map((file, idx) => (\r\n                <li key={idx}>{file.name}</li>\r\n              ))}\r\n            </ul>\r\n            <div className=\"navigation-buttons\">\r\n              <button className=\"btn-secondary\" onClick={() => setStep(1)}>\r\n                Back\r\n              </button>\r\n              <button className=\"btn-primary\" onClick={() => setStep(3)}>\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {step === 3 && (\r\n          <div className=\"step\">\r\n            <h2>Step 3: Review & Submit</h2>\r\n            <p>📦 Uploaded files:</p>\r\n            <ul>\r\n              {uploadedFiles.map((file, idx) => (\r\n                <li key={idx}>{file.name}</li>\r\n              ))}\r\n            </ul>\r\n            <div className=\"navigation-buttons\">\r\n              <button className=\"btn-secondary\" onClick={handleRestart}>\r\n                Restart\r\n              </button>\r\n              <button\r\n                className=\"btn-primary\"\r\n                onClick={submitToBackend} // ✅ Sends only valid rows to backend\r\n              >\r\n                Final Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}